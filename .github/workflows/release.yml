name: Release BastionBuddy

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

permissions:
  contents: write # Needed for creating releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for version determination

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          if ! command -v zip &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y zip
          fi

      - name: Build release binaries
        run: make release
        env:
          VERSION: ${{ env.VERSION }}

      - name: Generate changelog
        id: changelog
        run: |
          # Get latest tag
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -A 1 ${{ env.VERSION }} | tail -n 1)
          
          # Generate changelog
          if [ "$PREVIOUS_TAG" != "" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            echo "Changes since $PREVIOUS_TAG:" >> $GITHUB_ENV
            git log --pretty=format:"* %s" $PREVIOUS_TAG..${{ env.VERSION }} >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            echo "Initial release" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: BastionBuddy ${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
          files: builds/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
