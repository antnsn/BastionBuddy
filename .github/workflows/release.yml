name: Release BastionBuddy

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          if ! command -v zip &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y zip
          fi

      - name: Build release binaries
        run: make release
        env:
          VERSION: ${{ env.VERSION }}

      # Add code signing certificate
      - name: Import Code Signing Certificate
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path certificate
          Set-Content -Path certificate/certificate.pfx -Value ${{ secrets.WINDOWS_CERTIFICATE }} -Encoding Byte
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}

      # Sign Windows executables
      - name: Sign Windows Binary
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          $files = Get-ChildItem -Path "builds" -Recurse -Filter "*.exe"
          foreach ($file in $files) {
            & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86\signtool.exe" sign /f certificate/certificate.pfx /tr http://timestamp.digicert.com /td sha256 /fd sha256 $file.FullName
          }
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}

      - name: List build artifacts
        run: ls -la builds/

      - name: Generate changelog
        id: changelog
        shell: bash
        run: |
          # Try to get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # No previous tag found - list all commits
            COMMITS=$(git log --pretty=format:"* %s")
            CHANGELOG="Initial release with the following changes:${COMMITS//$'\n'/\\n}"
          else
            # Get changes since the previous tag
            COMMITS=$(git log --pretty=format:"* %s" $PREVIOUS_TAG..HEAD)
            CHANGELOG="Changes since ${PREVIOUS_TAG}:${COMMITS//$'\n'/\\n}"
          fi
          
          # Escape the changelog for GitHub Actions output
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          
          echo "CHANGELOG=$CHANGELOG" >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          files: |
            builds/bastionbuddy_*.tar.gz
            builds/bastionbuddy_*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup build directories
        run: make cleanup

      - name: Notify Homebrew Tap
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: antnsn/homebrew-bastionbuddy
          event-type: update_formula
          client-payload: '{"version": "${{ env.VERSION }}", "ref": "${{ github.sha }}"}'
